name: Build and Deploy to Docker Hub

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.11.3]
        otp: [23.2.7]
        dir: ["robotica_common", "robotica", "robotica_ui", "ceryx", "ceryx_docker"]

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup elixir
        uses: erlef/setup-elixir@v1.7
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2.1.6
        id: mix-cache # id to use in retrieve action
        with:
          path: ${{ matrix.dir }}/deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}/{1}/{2}', github.workspace, matrix.dir, 'mix.lock')) }}-4
      - name: Install Mix Dependencies
        working-directory: ${{ matrix.dir }}
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          # mix archive.install --force hex nerves_bootstrap
          mix deps.get
      - name: Build
        working-directory: ${{ matrix.dir }}
        run: |
          mix compile
      - name: Check Formatting
        working-directory: ${{ matrix.dir }}
        run: mix format --check-formatted
      - name: Run Credo
        working-directory: ${{ matrix.dir }}
        run: mix credo --strict
      - name: Run Tests
        working-directory: ${{ matrix.dir }}
        run: mix test

  test_web:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports: ["5432:5432"]
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        elixir: [1.11.3]
        otp: [23.2.7]
        dir: ["robotica_hello", "robotica_face"]

    env:
      DATABASE_URL_TEST: postgresql://postgres:postgres@localhost/test?sslmode=disable
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup elixir
        uses: erlef/setup-elixir@v1.7
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2.1.6
        id: mix-cache # id to use in retrieve action
        with:
          path: ${{ matrix.dir }}/deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}/{1}/{2}', github.workspace, matrix.dir, 'mix.lock')) }}-4
      - name: Install Mix Dependencies
        working-directory: ${{ matrix.dir }}
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Build
        working-directory: ${{ matrix.dir }}
        run: |
          mix compile
      - name: Install assets
        working-directory: ${{ matrix.dir }}
        run: |
          npm install --prefix assets
      - name: Build assets
        working-directory: ${{ matrix.dir }}
        run: |
          npm run deploy --prefix assets
      - name: Check Formatting
        working-directory: ${{ matrix.dir }}
        run: mix format --check-formatted
      - name: Check Prettier
        working-directory: ${{ matrix.dir }}
        run: mix prettier
      - name: Run Credo
        working-directory: ${{ matrix.dir }}
        run: mix credo --strict
      - name: Run Tests
        working-directory: ${{ matrix.dir }}
        run: mix test


 #  dialyzer:
 #    runs-on: ubuntu-latest
 #
 #    strategy:
 #      matrix:
 #        elixir: [1.11.3]
 #        otp: [23.2.7]
 #        dir: ["robotica_common", "robotica", "robotica_ui", "robotica_hello", "robotica_face", "ceryx", "ceryx_docker"]
 #
 #    env:
 #      MIX_ENV: test
 #
 #    steps:
 #      - uses: actions/checkout@v2.3.4
 #      - name: Setup elixir
 #        uses: erlef/setup-elixir@v1.7
 #        with:
 #          elixir-version: ${{ matrix.elixir }}
 #          otp-version: ${{ matrix.otp }}
 #      - name: Retrieve Mix Dependencies Cache
 #        uses: actions/cache@v2.1.6
 #        id: mix-cache # id to use in retrieve action
 #        with:
 #          path: ${{ matrix.dir }}/deps
 #          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}/{1}/{2}', github.workspace,  matrix.dir, 'mix.lock')) }}-4
 #      - name: Install Mix Dependencies
 #        working-directory: ${{ matrix.dir }}
 #        if: steps.mix-cache.outputs.cache-hit != 'true'
 #        run: |
 #          mix local.rebar --force
 #          mix local.hex --force
 #          # mix archive.install --force hex nerves_bootstrap
 #          mix deps.get
 #      - name: Retrieve PLT Cache
 #        uses: actions/cache@v2.1.6
 #        id: plt-cache
 #        with:
 #          path: ${{ matrix.dir }}/priv/plts
 #          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}/{1}/{2}', github.workspace, matrix.dir, 'mix.lock')) }}
 #      - name: Build
 #        working-directory: ${{ matrix.dir }}
 #        run: |
 #          mix compile
 #      - name: Create PLTs
 #        working-directory: ${{ matrix.dir }}
 #        if: steps.plt-cache.outputs.cache-hit != 'true'
 #        run: |
 #          mkdir -p priv/plts
 #          mix dialyzer --plt
 #      - name: Run dialyzer
 #        working-directory: ${{ matrix.dir }}
 #        run: mix dialyzer --no-check
